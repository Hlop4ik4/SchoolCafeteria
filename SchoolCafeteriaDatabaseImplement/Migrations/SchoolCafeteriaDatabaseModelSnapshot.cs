// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SchoolCafeteriaDatabaseImplement;

#nullable disable

namespace SchoolCafeteriaDatabaseImplement.Migrations
{
    [DbContext(typeof(SchoolCafeteriaDatabase))]
    partial class SchoolCafeteriaDatabaseModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SchoolCafeteriaDatabaseImplement.Models.Goods", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BruttoMass")
                        .HasColumnType("int");

                    b.Property<bool>("MarkToDelete")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NettoMass")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Goods");
                });

            modelBuilder.Entity("SchoolCafeteriaDatabaseImplement.Models.GoodsComposition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("A")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("B1")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("C")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Ca")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Carb")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("E")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Fat")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Fe")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("GoodsId")
                        .HasColumnType("int");

                    b.Property<decimal>("Mg")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("P")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Protein")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("GoodsId");

                    b.ToTable("GoodsCompositions");
                });

            modelBuilder.Entity("SchoolCafeteriaDatabaseImplement.Models.TechMapComposition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("A")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("B1")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("C")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Ca")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Carb")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("E")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Fat")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Fe")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Mg")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("P")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Protein")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TechnologicalMapId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TechnologicalMapId");

                    b.ToTable("TechMapCompositions");
                });

            modelBuilder.Entity("SchoolCafeteriaDatabaseImplement.Models.TechMapGoods", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("GoodsId")
                        .HasColumnType("int");

                    b.Property<int>("TechMapId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GoodsId");

                    b.HasIndex("TechMapId");

                    b.ToTable("TechMapGoods");
                });

            modelBuilder.Entity("SchoolCafeteriaDatabaseImplement.Models.TechnologicalMap", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CookingTechnology")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DishName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RecipeNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("TechnologicalMaps");
                });

            modelBuilder.Entity("SchoolCafeteriaDatabaseImplement.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("SchoolCafeteriaDatabaseImplement.Models.GoodsComposition", b =>
                {
                    b.HasOne("SchoolCafeteriaDatabaseImplement.Models.Goods", "Goods")
                        .WithMany()
                        .HasForeignKey("GoodsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Goods");
                });

            modelBuilder.Entity("SchoolCafeteriaDatabaseImplement.Models.TechMapComposition", b =>
                {
                    b.HasOne("SchoolCafeteriaDatabaseImplement.Models.TechnologicalMap", "TechnologicalMap")
                        .WithMany()
                        .HasForeignKey("TechnologicalMapId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TechnologicalMap");
                });

            modelBuilder.Entity("SchoolCafeteriaDatabaseImplement.Models.TechMapGoods", b =>
                {
                    b.HasOne("SchoolCafeteriaDatabaseImplement.Models.Goods", "Goods")
                        .WithMany("TechMapGoods")
                        .HasForeignKey("GoodsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SchoolCafeteriaDatabaseImplement.Models.TechnologicalMap", "TechMap")
                        .WithMany("TechMapGoods")
                        .HasForeignKey("TechMapId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Goods");

                    b.Navigation("TechMap");
                });

            modelBuilder.Entity("SchoolCafeteriaDatabaseImplement.Models.Goods", b =>
                {
                    b.Navigation("TechMapGoods");
                });

            modelBuilder.Entity("SchoolCafeteriaDatabaseImplement.Models.TechnologicalMap", b =>
                {
                    b.Navigation("TechMapGoods");
                });
#pragma warning restore 612, 618
        }
    }
}
